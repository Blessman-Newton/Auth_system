[
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AbstractBaseUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "PermissionsMixin",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "UserCreateSerializer",
        "importPath": "djoser.serializers",
        "description": "djoser.serializers",
        "isExtraImport": true,
        "detail": "djoser.serializers",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "re_path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "auth_system.backend.accounts.migrations.0001_initial",
        "description": "auth_system.backend.accounts.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='UserAccount',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "auth_system.backend.accounts.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "AccountsConfig",
        "kind": 6,
        "importPath": "auth_system.backend.accounts.apps",
        "description": "auth_system.backend.accounts.apps",
        "peekOfCode": "class AccountsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'accounts'",
        "detail": "auth_system.backend.accounts.apps",
        "documentation": {}
    },
    {
        "label": "UserManagerAccount",
        "kind": 6,
        "importPath": "auth_system.backend.accounts.models",
        "description": "auth_system.backend.accounts.models",
        "peekOfCode": "class UserManagerAccount(BaseUserManager):\n    def create_user(self, email, name, password=None):\n        if not email:\n            raise ValueError(\"User must have an email address\")\n        email = self.normalize_email(email)\n        user = self.model(email=email, name=name)\n        user.set_password(password)\n        user.save()\n        return user\nclass UserAccount(AbstractBaseUser, PermissionsMixin):",
        "detail": "auth_system.backend.accounts.models",
        "documentation": {}
    },
    {
        "label": "UserAccount",
        "kind": 6,
        "importPath": "auth_system.backend.accounts.models",
        "description": "auth_system.backend.accounts.models",
        "peekOfCode": "class UserAccount(AbstractBaseUser, PermissionsMixin):\n    email = models.EmailField(max_length=255, unique=True)\n    name = models.CharField(max_length=255)\n    is_active = models.BooleanField(default=True)\n    is_staff = models.BooleanField(default=True)\n    objects = UserManagerAccount()\n    USERNAME_FIELD = 'email'\n    REQUIRED_FIELDS = ['name']\n    def get_full_name(self):\n        return self.name",
        "detail": "auth_system.backend.accounts.models",
        "documentation": {}
    },
    {
        "label": "UserCreateSerializer",
        "kind": 6,
        "importPath": "auth_system.backend.accounts.serializers",
        "description": "auth_system.backend.accounts.serializers",
        "peekOfCode": "class UserCreateSerializer(UserCreateSerializer):\n    class Meta(UserCreateSerializer.Meta):\n        model = User\n        fields = ('id', 'email', 'name', 'password')",
        "detail": "auth_system.backend.accounts.serializers",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "auth_system.backend.accounts.serializers",
        "description": "auth_system.backend.accounts.serializers",
        "peekOfCode": "User = get_user_model()\nclass UserCreateSerializer(UserCreateSerializer):\n    class Meta(UserCreateSerializer.Meta):\n        model = User\n        fields = ('id', 'email', 'name', 'password')",
        "detail": "auth_system.backend.accounts.serializers",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.asgi",
        "description": "auth_system.backend.auth_system.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "auth_system.backend.auth_system.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-!2pjarrc3o9!ow^+15u0lr@5e5p!&$ccamu(0(a!!uo8+*346!'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-!2pjarrc3o9!ow^+15u0lr@5e5p!&$ccamu(0(a!!uo8+*346!'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'djoser',",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'djoser',\n    'rest_framework',\n    'accounts',",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'auth_system.urls'",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "ROOT_URLCONF = 'auth_system.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'build')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'build')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "WSGI_APPLICATION = 'auth_system.wsgi.application'\n# Database\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# EMAIL CONFIGURATION\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# EMAIL CONFIGURATION\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_PORT = 587",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_PORT = 587\nEMAIL_HOST_USER = 'asieduceci.coun@gmail.com'\nEMAIL_HOST_PASSWORD = 'qpynletooydomjty'\nEMAIL_USE_TLS = True\n# Password validation\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "EMAIL_HOST = 'smtp.gmail.com'\nEMAIL_PORT = 587\nEMAIL_HOST_USER = 'asieduceci.coun@gmail.com'\nEMAIL_HOST_PASSWORD = 'qpynletooydomjty'\nEMAIL_USE_TLS = True\n# Password validation\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_PORT",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "EMAIL_PORT = 587\nEMAIL_HOST_USER = 'asieduceci.coun@gmail.com'\nEMAIL_HOST_PASSWORD = 'qpynletooydomjty'\nEMAIL_USE_TLS = True\n# Password validation\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_USER",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "EMAIL_HOST_USER = 'asieduceci.coun@gmail.com'\nEMAIL_HOST_PASSWORD = 'qpynletooydomjty'\nEMAIL_USE_TLS = True\n# Password validation\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_PASSWORD",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "EMAIL_HOST_PASSWORD = 'qpynletooydomjty'\nEMAIL_USE_TLS = True\n# Password validation\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_USE_TLS",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "EMAIL_USE_TLS = True\n# Password validation\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'build/static')\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'build/static')\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')\nREST_FRAMEWORK = {",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'build/static')\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')\nREST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': [",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'build/static')\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')\nREST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.IsAuthenticated'",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "STATIC_URL = '/static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'build/static')\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')\nREST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.IsAuthenticated'\n        ],\n    'DEFAULT_AUTHENTICATION_CLASSES': (",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'build/static')\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')\nREST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.IsAuthenticated'\n        ],\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, 'static')\nREST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.IsAuthenticated'\n        ],\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    ),\n}\nSIMPLE_JWT = {",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.IsAuthenticated'\n        ],\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    ),\n}\nSIMPLE_JWT = {\n   'AUTH_HEADER_TYPES': ('JWT',),",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "SIMPLE_JWT = {\n   'AUTH_HEADER_TYPES': ('JWT',),\n}\nDJOSER = {\n    'LOGIN_FIELD': 'email',\n    'USER_CREATE_PASSWORD_RETYPE': True,\n    'USERNAME_CHANGED_EMAIL_CONFIRMATION': True,\n    'PASSWORD_CHANGED_EMAIL_CONFIRMATION': True,\n    'SEND_EMAIL_CONFIRMATION': True,\n    'SET_USERNAME_RETYPE': True,",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "DJOSER",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "DJOSER = {\n    'LOGIN_FIELD': 'email',\n    'USER_CREATE_PASSWORD_RETYPE': True,\n    'USERNAME_CHANGED_EMAIL_CONFIRMATION': True,\n    'PASSWORD_CHANGED_EMAIL_CONFIRMATION': True,\n    'SEND_EMAIL_CONFIRMATION': True,\n    'SET_USERNAME_RETYPE': True,\n    'SET_PASSWORD_RETYPE': True,\n    'PASSWORD_RESET_CONFIRM_URL': 'password-reset/{uid}/{token}',\n    'USERNAME_RESET_CONFIRM_URL' : 'email-reset/{uid}/{token}',",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'accounts.UserAccount'\n# Default primary key field type\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.settings",
        "description": "auth_system.backend.auth_system.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "auth_system.backend.auth_system.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.urls",
        "description": "auth_system.backend.auth_system.urls",
        "peekOfCode": "urlpatterns = [\n    path('auth/', include('djoser.urls')),\n    path('auth/', include('djoser.urls.jwt')),\n]\nurlpatterns += [re_path(r'^.*', TemplateView.as_view(template_name='index.html'))]",
        "detail": "auth_system.backend.auth_system.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "auth_system.backend.auth_system.wsgi",
        "description": "auth_system.backend.auth_system.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "auth_system.backend.auth_system.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "auth_system.backend.manage",
        "description": "auth_system.backend.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'auth_system.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "auth_system.backend.manage",
        "documentation": {}
    }
]